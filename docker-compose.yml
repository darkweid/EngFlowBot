services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis_fsm:
        condition: service_healthy
    volumes:
      - bot_data:/app/bot/data           # → jobs.sqlite
      - bot_data:/app/bot/log_files      # → debug.log

  redis_fsm:
    image: "redis:latest"
    restart: "unless-stopped"
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
    volumes:
      - "redis_data:/data"

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data



volumes:
  bot_data:
  redis_data:
  postgres_data:
